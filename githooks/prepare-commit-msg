#!/bin/sh
#
# Prepare the commit message by adding a release note.

if test "$2" = "message"; then
    # This git command is non-interactive, and will not filter out the
    # comments out so there is nothing for us to do here.
    exit 0
fi

oldmain=$(cat "$1"|grep -v '^#')
oldcomm=$(cat "$1"|grep '^#' | sed -ne '/^# Changes to be committed/{q;};p')

echo "$oldmain" >"$1"
echo >> "$1"
if ! grep -q '^Release note' "$1"; then
	echo "Release note: None" >> "$1"
	echo >> "$1"
fi

cat >> "$1" << EOF
$oldcomm
#
# Commit message recommendations:
#
#     ---
#     <pkg>: <short description>
#
#     <long description>
#
#     Release note (category): <release note description>
#     ---
#
# Wrap long lines! 72 columns is best.
#
# The release note must be present if your commit has
# user-facing changes. Leave the default above if not.
#
# Categories for release notes:
# - cli change
# - sql change
# - admin ui change
# - general change (e.g., change of required Go version)
# - build change (e.g., compatibility with older CPUs)
# - enterprise change (e.g., change to backup/restore)
# - backwards-incompatible change
# - performance improvement
# - bug fix
EOF
